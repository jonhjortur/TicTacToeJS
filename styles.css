*, *::after, *::before {
    box-sizing: border-box;
}

:root {
    --sizer: 200px; /*Uuu....I mean scalar*/
    --btn-margin: calc(var(--sizer) * .25);
    --mark-size: calc(var(--sizer) * .9);
    --bg-color: #aaa;
}

body {
    margin: 0;
    background-color: var(--bg-color);
}
.board {
    width: 100vw;
    height: 100vh;
    display: grid;
    justify-content: center;
    align-content: center;
    justify-items: center;
    align-items: center;
    grid-template-columns: repeat(3, auto);
}

.cell {
    width: var(--sizer);
    height: var(--sizer);
    border: 1px solid #888;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    cursor: pointer;
}

.cell:first-child,
.cell:nth-child(2),
.cell:nth-child(3) {
    border-top: none;
}

.cell:nth-child(3n + 1) {
    border-left: none;
}

.cell:nth-child(3n + 3) {
    border-right: none;
}

.cell:last-child,
.cell:nth-child(8),
.cell:nth-child(7) {
    border-bottom: none;
}

.cell.x,
.cell.oh {
    cursor: not-allowed;
}

.cell.x::before,
.cell.x::after {
    background-color: #a44;
}
.cell.oh::before {
    background-color: #4ad;
}

.board.x .cell:not(.x):not(.oh):hover::before,
.board.x .cell:not(.x):not(.oh):hover::after,
.board.oh .cell:not(.x):not(.oh):hover::before {
    background-color: rgb(153, 153, 153);
}

.board.x .cell:not(.x):not(.oh):hover::before,
.board.x .cell:not(.x):not(.oh):hover::after {
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    height: var(--mark-size);
}

.cell.x::before {
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    animation: XOutBefore 1s;
    animation-fill-mode: forwards;
}


.board.x .cell:not(.x):not(.oh):hover::before {
    transform: rotate(45deg);
}

.cell.x::after {
    content: '';
    position: absolute;
    width: calc(var(--mark-size) * .15);
    animation: XOutAfter 1s;
    animation-fill-mode: forwards;
}
.board.x .cell:not(.x):not(.oh):hover::after  {
    transform: rotate(-45deg);
}

@-moz-keyframes XOutBefore {
    0% {
        transform: rotate(0deg);
        height: 0px;
    }
    100% {
        transform: rotate(45deg);
        height: var(--mark-size)
    }    
}
@-webkit-keyframes XOutBefore { 
    0% {
        transform: rotate(0deg);
        height: 0px;
    }
    100% {
        transform: rotate(45deg);
        height: var(--mark-size)
    }
}
@keyframes XOutBefore { 
    0% {
        transform: rotate(0deg);
        height: 0px;
    }
    100% {
        transform: rotate(45deg);
        height: var(--mark-size)
    }
}

@-moz-keyframes XOutAfter {
    0% {
        transform: rotate(0deg);
        height: 0px;
    }
    100% {
        transform: rotate(-45deg);
        height: var(--mark-size)
    }   
}
@-webkit-keyframes XOutAfter { 
    0% {
        transform: rotate(0deg);
        height: 0px;
    }
    100% {
        transform: rotate(-45deg);
        height: var(--mark-size)
    }  
}
@keyframes XOutAfter { 
    0% {
        transform: rotate(0deg);
        height: 0px;
    }
    100% {
        transform: rotate(-45deg);
        height: var(--mark-size)
    }
}

.cell.oh::before,
.cell.oh::after,
.board.oh .cell:not(.x):not(.oh):hover::before,
.board.oh .cell:not(.x):not(.oh):hover::after {
    content: '';
    position: absolute;
    border-radius: 50%;
}

.cell.oh::before {
    animation: OoutBefore 1s;
    animation-fill-mode: forwards;
}
.board.oh .cell:not(.x):not(.oh):hover::before {
    width: var(--mark-size);
    height: var(--mark-size);
}


.cell.oh::after {
    background-color: var(--bg-color);
    animation: OoutAfter 1s;
    animation-fill-mode: forwards;
}
.board.oh .cell:not(.x):not(.oh):hover::after {
    width: calc(var(--mark-size) * .7);
    height: calc(var(--mark-size) * .7);
    background-color: var(--bg-color);
}

@-moz-keyframes OoutBefore {
    0% {
        width: 0;
        height: 0;
    }
    100% {
        width: var(--mark-size);
        height: var(--mark-size);
    }
}
@-webkit-keyframes OoutBefore { 
    0% {
        width: 0;
        height: 0;
    }
    100% {
        width: var(--mark-size);
        height: var(--mark-size);
    }
}
@keyframes OoutBefore { 
    0% {
        width: 0;
        height: 0;
    }
    100% {
        width: var(--mark-size);
        height: var(--mark-size);
    }
}

@-moz-keyframes OoutAfter {
    0% {
        width: 0;
        height: 0;
    }
    100% {
        width: calc(var(--mark-size) * .7);
        height: calc(var(--mark-size) * .7);
    }
}
@-webkit-keyframes OoutAfter { 
    0% {
        width: 0;
        height: 0;
    }
    100% {
        width: calc(var(--mark-size) * .7);
        height: calc(var(--mark-size) * .7);
    }
}
@keyframes OoutAfter { 
    0% {
        width: 0;
        height: 0;
    }
    100% {
        width: calc(var(--mark-size) * .7);
        height: calc(var(--mark-size) * .7);
    }
}

.win-msg {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, .7);
    justify-content: center;
    align-items: center;
    color: rgba(170, 170, 170, .5);
    font-size: calc(var(--sizer) * .5);
    font-weight: 900;
    flex-direction: column;
}

.win-msg button {
    font-size: calc(var(--sizer) * .25);
    background-color: rgba(85, 85, 255, .7);
    border: 1px solid black;
    margin-top: var(--btn-margin);
    padding: calc(var(--sizer) * .15) calc(var(--sizer) * .3);
    cursor: pointer;
}

.win-msg button:hover {
    background-color: rgba(85, 187, 85, .7);
    color: rgba(255, 255, 255, .5);;
}

.win-msg.show {
    display: flex;
}

/*Hvers vegna ekki að hafa bara nóg af media query-um !?*/
@media only screen and (max-width: 200px) {
    :root {
        --sizer: 30px;
    }
  }

  @media only screen and (min-width: 201px) and (max-width: 400px) {
    :root {
        --sizer: 50px;
    }
  }

  @media only screen and (min-width: 401px) and (max-width: 600px) {
    :root {
        --sizer: 100px;
    }
  }

  @media only screen and (min-width: 601px) and (max-width: 800px) {
    :root {
        --sizer: 180px;
    }
  }

  @media only screen and (min-width: 801px) and (max-width: 1000px) {
    :root {
        --sizer: 220px;
    }
  }

  @media only screen and (min-width: 1001px) and (max-width: 1440px) {
    :root {
        --sizer: 280px;
    }
  }

  @media only screen and (min-width: 1441px) and (max-width: 1920px) {
    :root {
        --sizer: 290px;
    }
  }

  @media only screen and (min-width: 1921px) and (max-width: 2000px) {
    :root {
        --sizer: 310px;
    }
  }

  @media only screen and (min-width: 2001px) and (max-width: 2559px) {
    :root {
        --sizer: 330px;
    }
  }

  @media only screen and (min-width: 2560px) {
    :root {
        --sizer: 410px;
    }
  }
